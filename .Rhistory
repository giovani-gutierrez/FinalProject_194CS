knitr::opts_chunk$set(echo = TRUE)
library(igraph)
edgelist <- read.csv('large_twitch_edges.csv',
header = TRUE)
edgelist <- read.csv('large_twitch_edges.csv', header = TRUE)
features <- read.csv('large_twitch_features.csv', header = TRUE)
g <- graph_from_data_frame(edgelist, directed = FALSE, vertices = features)
g <- graph_from_data_frame(d = edgelist, directed = FALSE)
g
edgelist$numeric_id_1
features$numeric
View(edgelist)
View(features)
max(features$numeric_id)
max(edgelist$numeric_id_1)
max(edgelist$numeric_id_2)
length(unique(edgelist$numeric_id_1))
length(unique(edgelist$numeric_id_2))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(igraph)
edgelist <- read.csv('large_twitch_edges.csv')
features <- read.csv('large_twitch_features.csv')
g <- graph_from_data_frame(d = edgelist, directed = FALSE, vertices = features)
url1 <- "https://github.com/JeffreyAlanSmith/Integrated_Network_Science/raw/master/data/class555_matrix.csv"
class_mat <- read.csv(file = url1)
unique(features)
features %>% relocate(numeric_id, .before = first_col())
features %>% relocate(numeric_id, .before = views)
features2 <- relocate(features, numeric_id, .before = views)
g <- graph_from_data_frame(d = edgelist, directed = FALSE, vertices = features2)
edgelist <- read.csv('large_twitch_edges.csv')
features <- read.csv('large_twitch_features.csv') %>%
relocate(numeric_id, .before = views)
edgelist <- read.csv('large_twitch_edges.csv')
features <- read_csv('large_twitch_features.csv') %>%
relocate(numeric_id, .before = views) # move id to first col
unique(features$language)
View(class_mat)
gc()
unique(features$affiliate)
unique(features$dead_account)
unique(features$mature)
plot(edgelist)
View(g)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(igraph)
library(backbone)
twitch_data <- read_csv('large_twitch_edges.csv')
features <- read_csv(
'large_twitch_features.csv',
col_types = list(language = col_factor(), mature = col_logical(),
dead_account = col_logical(), affiliate = col_logical())
) %>% relocate(numeric_id, .before = views) # move id to first col
edgelist <- matrix(unlist(twitch_data), ncol = 2) + 1
g <- graph_from_edgelist(edgelist, directed = FALSE)
sparsify.with.localdegree(edgelist, s = 0.3, narrative = TRUE)
sparsify.with.localdegree(g, s = 0.3, narrative = TRUE)
edgelist <- Matrix(unlist(twitch_data), ncol = 2) + 1
as_adjacency_matrix(g, sparse = TRUE)
sparsify.with.localdegree(g, s = 0.3, narrative = TRUE)
mat <- as_adjacency_matrix(g, sparse = TRUE)
sparsify.with.localdegree(mat, s = 0.3, narrative = TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(igraph)
library(backbone)
edgelist <- read_csv('large_twitch_edges.csv')
features <- read_csv(
'large_twitch_features.csv',
col_types = list(language = col_factor(), mature = col_logical(),
dead_account = col_logical(), affiliate = col_logical())
) %>% relocate(numeric_id, .before = views) # move id to first col
edgelist <- matrix(unlist(edgelist), ncol = 2) + 1
features$numeric_id <- features$numeric_id + 1
g <- graph_from_edgelist(edgelist, directed = FALSE)
g
degree(g)
edge_density(g)
View(edgelist)
View(features)
mat <- as_adjacency_matrix(g, sparse = TRUE)
mat
mat <- as_adjacency_matrix(g, sparse = TRUE)
mat
E(g)[2 %--% 12]
E(g)[1 %--% 1]
E(g)[2 %--% 12]
mat <- as_adjacency_matrix(g, sparse = TRUE)
writeMM(mat, file = 'sparseMatrix.mtx')
mat <- as_adjacency_matrix(g, sparse = TRUE)
saveRDS(mat, file = 'sparseMatrix.rds')
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(igraph)
library(backbone)
mat <- as_adjacency_matrix(g, sparse = TRUE)
writeMM(mat, file = 'sparseMatrix.mtx')
